{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","marginTop","padding","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAMC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,UACrD,gCACI,6BAAKJ,IACL,4BAAIC,WCeLI,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGV,UCKxBW,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,mCACTW,KAAK,SACJC,YAAY,gBACZC,SAAUH,OCELI,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,UAAW,OAAQC,QAAS,YAA1G,SACCN,EAAMO,YC0CAC,G,wDAxCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACjB,YAAagB,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACTzB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChBqB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACtB,OAAO8B,S,+BAO/B,IAAD,OACCC,EAAiBC,KAAKP,MAAMzB,OAAOiC,QAAO,SAAAC,GAC5C,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS,EAAKX,MAAMpB,YAAY8B,kBAEpE,OAAiC,IAA7BH,KAAKP,MAAMzB,OAAOqC,OACX,yCAGH,sBAAKzC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAc0B,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUpB,OAAQ+B,a,GA/BhBO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e5440fe0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img  src={`https://robohash.org/${id}?200x200`} alt=\"robot\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    return (\r\n        <div>\r\n            {            \r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                        key={robots[i].id}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                        />\r\n                        );\r\n            })\r\n            }\r\n        </div>\r\n            );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n         type=\"search\"\r\n          placeholder=\"search robots\"\r\n          onChange={searchChange}\r\n        />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px', marginTop: '20px', padding: '15px 0px'}}>\r\n        {props.children}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users => this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                <CardList robots={filteredRobots}/>\r\n                </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}